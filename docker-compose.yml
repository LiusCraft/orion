version: '3.8'

services:
  # 数据库服务
  postgres:
    image: postgres:15-alpine
    container_name: cdnagent-postgres
    environment:
      POSTGRES_DB: cdnagent
      POSTGRES_USER: cdnagent
      POSTGRES_PASSWORD: cdnagent123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - cdnagent-network
    restart: unless-stopped

  # Redis服务
  redis:
    image: redis:7-alpine
    container_name: cdnagent-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - cdnagent-network
    restart: unless-stopped

  # 后端服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cdnagent-backend
    ports:
      - "8080:8080"
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=cdnagent
      - DATABASE_USER=cdnagent
      - DATABASE_PASSWORD=cdnagent123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-jwt-secret-key-here
      - GIN_MODE=release
    depends_on:
      - postgres
      - redis
    networks:
      - cdnagent-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cdnagent-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://localhost:8080/api/v1
    depends_on:
      - backend
    networks:
      - cdnagent-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  cdnagent-network:
    driver: bridge